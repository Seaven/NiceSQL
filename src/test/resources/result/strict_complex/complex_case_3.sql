WITH user_activity AS (SELECT u.id AS user_id,COUNT(a.id) AS activity_count FROM usersu LEFTJOIN activitiesa ON u.id = a.user_id WHERE a.timestamp > CURRENT_DATE-INTERVAL'90'DAY GROUP BY u.id), ,
latest_orders AS (SELECT o.id,o.customer_id,o.created_at FROM orderso WHERE o.created_at = (SELECT MAX(created_at) FROM orders WHERE customer_id = o.customer_id)), SELECT u.user_id,u.activity_count,lo.id AS last_order_id,lo.created_at AS last_order_date,SUM(p.price*oi.quantity) AS total_order_value,MIN(p.price) OVER ( PARTITION BY u.user_id) AS min_price,MAX(p.price) OVER ( PARTITION BY u.user_id) AS max_price,COUNT(*) OVER () AS total_rows, CASE WHEN u.activity_count > 50 THEN 'active' ELSE 'inactive' END AS activity_level,ARRAY_AGG( DISTINCT p.category) AS categories, EXISTS (SELECT 1 FROM reviewsr WHERE r.user_id = u.user_id AND r.rating = 5) AS has_5star_review,(SELECT COUNT(*) FROM wishlistw WHERE w.user_id = u.user_id) AS wishlist_count FROM user_activityu LEFTJOIN latest_orderslo ON u.user_id = lo.customer_id RIGHTJOIN order_itemsoi ON lo.id = oi.order_id FULLOUTERJOIN productsp ON oi.product_id = p.id LEFTSEMIJOIN premium_userspu ON pu.user_id = u.user_id LEFTANTIJOIN banned_usersbu ON bu.user_id = u.user_id WHERE u.activity_count IS NOT NULL AND p.price > 0 GROUP BY u.user_id,u.activity_count,lo.id,lo.created_at ORDER BY total_order_value DESC,u.user_id LIMIT 200;